plugins {
	id 'groovy'
	//A Gradle plugin that downloads and caches WebDriver binaries specific to the OS the build runs on
	id "com.github.erdi.webdriver-binaries" version "2.2"
}

repositories {
	jcenter()
}

ext {
	// The drivers we want to use
	drivers = ["firefox", "chrome", "chromeHeadless"]
	ext {
		gebVersion = '3.3'
		seleniumVersion = '3.14.0'
		chromeDriverVersion = '80.0.3987.16'
		geckoDriverVersion = '0.26.0'
	}
}

dependencies {
	testCompile "org.gebish:geb-spock:$gebVersion"
	testCompile("org.spockframework:spock-core:1.3-groovy-2.5") {
		exclude group: "org.codehaus.groovy"
	}
	testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
	testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
	compile 'org.codehaus.groovy:groovy-all:2.4.15'
	testCompile( 'com.athaydes:spock-reports:1.6.3' ) {
		transitive = false
	}
	testCompile 'org.slf4j:slf4j-api:1.7.13'
	testCompile 'org.slf4j:slf4j-simple:1.7.13'
}

webdriverBinaries {
	chromedriver {
		version = chromeDriverVersion
		fallbackTo32Bit = true
	}
	geckodriver geckoDriverVersion
}

drivers.each { driver ->
	task "${driver}Test"(type: Test) {
		group JavaBasePlugin.VERIFICATION_GROUP

		outputs.upToDateWhen { false }  // Always run tests

		systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
		systemProperty "geb.env", driver
	}
}

test {
	dependsOn drivers.collect { tasks["${it}Test"] }
	enabled = false
}

tasks.withType(Test) {
	maxHeapSize = "1g"
	jvmArgs '-XX:MaxMetaspaceSize=128m'
	testLogging {
		exceptionFormat = 'full'
	}
}

tasks.withType(GroovyCompile) {
	groovyOptions.forkOptions.memoryMaximumSize = '256m'
}

